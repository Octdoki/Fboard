{"version":3,"sources":["firebase.js","redux/actionTypes.js","redux/actions.js","components/index.js","components/AddEdit.js","components/Error.js","components/Header.js","components/View.js","components/About.js","App.js","reportWebVitals.js","redux/reducer.js","redux/root-reducer.js","redux/sagas.js","redux/store.js","index.js"],"names":["fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","GET_CONTACTS_START","GET_CONTACTS_SUCCESS","GET_CONTACTS_FAIL","DELETE_CONTACTS_START","DELETE_CONTACTS_SUCCESS","DELETE_CONTACTS_FAIL","EDIT_CONTACTS_START","EDIT_CONTACTS_SUCCESS","EDIT_CONTACTS_FAIL","ADD_CONTACTS_START","ADD_CONTACTS_SUCCESS","ADD_CONTACTS_FAIL","getContactsStart","type","types","getContactsSuccess","contacts","payload","ListRecord","data","useSelector","state","console","log","dispatch","useDispatch","useEffect","onDelete","id","window","confirm","deleteContactsStart","className","class","scope","Object","keys","map","index","fullName","address","to","onClick","AddEdit","values","mobile","email","useState","initialState","setState","error","setError","currentId","useParams","history","useHistory","isEmpty","handleInputChange","e","target","name","value","style","color","onSubmit","obj","preventDefault","push","onChange","aria-label","Error","Header","backgroundColor","View","userId","About","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","loading","contactReducer","action","rootReducer","combineReducers","onLoadContactAsync","onDeleteContactAsync","onAddContactAsync","onEditContactAsync","onLoadContact","onDeleteContact","onAddContact","onEditContact","rootSaga","Promise","resolve","firebaseDb","child","on","val","put","getContactsFail","remove","deleteContactsFail","contact","addContactsFail","set","editContactsFail","takeLatest","contactSagas","fork","all","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b953878.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDWXZ-uMlugnoDc5mZzWu2IZuka9Bm0Ydg\",\n  authDomain: \"fir-board-f3a85.firebaseapp.com\",\n  databaseURL: \"https://fir-board-f3a85-default-rtdb.firebaseio.com\",\n  projectId: \"fir-board-f3a85\",\n  storageBucket: \"fir-board-f3a85.appspot.com\",\n  messagingSenderId: \"557153572860\",\n  appId: \"1:557153572860:web:59c178b34459ca72ff8479\"\n};\n\n\n  // Initialize Firebase\nconst fireDb = firebase.initializeApp(firebaseConfig);\n\nexport default fireDb.database().ref();"," export const GET_CONTACTS_START = \"GET_CONTACTS_START\"\n export const GET_CONTACTS_SUCCESS = \"GET_CONTACTS_SUCCESS\"\n export const GET_CONTACTS_FAIL = \"GET_CONTACTS_FAIL\"\n \n export const DELETE_CONTACTS_START = \"DELETE_CONTACTS_START\"\n export const DELETE_CONTACTS_SUCCESS = \"DELETE_CONTACTS_SUCCESS\"\n export const DELETE_CONTACTS_FAIL = \"DELETE_CONTACTS_FAIL\"\n\n export const EDIT_CONTACTS_START = \"EDIT_CONTACTS_START\"\n export const EDIT_CONTACTS_SUCCESS = \"EDIT_CONTACTS_SUCCESS\"\n export const EDIT_CONTACTS_FAIL = \"EDIT_CONTACTS_FAIL\"\n\n export const ADD_CONTACTS_START = \"ADD_CONTACTS_START\"\n export const ADD_CONTACTS_SUCCESS = \"ADD_CONTACTS_SUCCESS\"\n export const ADD_CONTACTS_FAIL = \"ADD_CONTACTS_FAIL\"\n\n\n\n","import * as types from \"./actionTypes\"\n\nexport const getContactsStart = () => ({\n    type : types.GET_CONTACTS_START,\n})\n\nexport const getContactsSuccess = (contacts) => ({\n    type : types.GET_CONTACTS_SUCCESS,\n    payload : contacts,\n})\n\nexport const getContactsFail = (error) => ({\n    type : types.GET_CONTACTS_FAIL,\n    payload : error,\n})\n\nexport const deleteContactsStart = (id) => ({\n    type : types.DELETE_CONTACTS_START,\n    payload : id,\n})\n\nexport const deleteContactsSuccess = () => ({\n    type : types.DELETE_CONTACTS_SUCCESS,\n})\n\nexport const deleteContactsFail = (error) => ({\n    type : types.DELETE_CONTACTS_FAIL,\n    payload : error,\n})\n\nexport const addContactsStart = (contact) => ({\n    type : types.ADD_CONTACTS_START,\n    payload : contact,\n})\n\nexport const addContactsSuccess = () => ({\n    type : types.ADD_CONTACTS_SUCCESS,\n})\n\nexport const addContactsFail = (error) => ({\n    type : types.ADD_CONTACTS_FAIL,\n    payload : error,\n})\n\nexport const editContactsStart = (contactsDetial) => ({\n    type : types.EDIT_CONTACTS_START,\n    payload : contactsDetial,\n})\n\nexport const editContactsSuccess = () => ({\n    type : types.EDIT_CONTACTS_SUCCESS,\n})\n\nexport const editContactsFail = (error) => ({\n    type : types.EDIT_CONTACTS_FAIL,\n    payload : error,\n})\n\n","import React, { useEffect, useState, useContext } from \"react\";\nimport firebaseDb from \"../firebase\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContactsStart, getContactsStart } from \"../redux/actions\";\n\nconst ListRecord = () => {\n  //const [data, setData] = useState({});\n\n  const { contacts : data } = useSelector((state) => state.data)\n\n  console.log(\"data\", data);\n\n  let dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getContactsStart())\n  }, [])\n\n  // useEffect(() => {\n  //   firebaseDb.child(\"contacts\").on(\"value\", (snapshot) => {\n  //     if (snapshot.val() !== null) {\n  //       setData({\n  //         ...snapshot.val(),\n  //       });\n  //     } else {\n  //       setData({});\n  //     }\n  //   });\n  // }, []);\n\n  const onDelete = (id) => {\n    if (window.confirm(\"게시글을 삭제하시겠습니까?\")) {\n      dispatch (deleteContactsStart(id))\n      dispatch (getContactsStart())\n\n  }\n};\n\n  return (\n    <>\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            {/* <div class=\"jumbotron\"> */}\n              <h1 class=\"display-2\"> Dstory </h1>\n            {/* </div> */}\n            <table className=\"table table-bordered table-striped\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">No.</th>\n                  <th scope=\"col\">제목</th>\n                  {/* <th scope=\"col\">이메일</th> */}\n                   <th scope=\"col\">작성자</th>\n                  <th scope=\"col\"></th> \n                  {/* <th scope=\"col\">Action</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(data).map((id, index) => {\n                  return (\n                    <tr key={id}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{data[id].fullName}</td>\n                       {/* <td>{data[id].mobile}</td> */}\n                      {/* <td>{data[id].email}</td>  */}\n                       <td>{data[id].address}</td> \n                      <td>\n                        <Link to={`/update/${id}`}>\n                          <a className=\"btn text-primary\">\n                            <i className=\"fas fa-pencil-alt\" />\n                          </a>\n                        </Link>\n\n                        <a\n                          className=\"btn text-danger\"\n                          onClick={() => onDelete(id)}\n                        >\n                          <i className=\"fas fa-trash-alt\" />\n                        </a>\n                        <Link to={`/view/${id}`}>\n                          <a className=\"btn text-info\">\n                            <i className=\"fas fa-eye\" />\n                          </a>\n                        </Link>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ListRecord;\n","import React, { useState, useEffect } from \"react\";\nimport firebaseDb from \"../firebase\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport {useSelector, useDispatch} from \"react-redux\"\nimport { addContactsStart, editContactsStart } from \"../redux/actions\";\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nconst AddEdit = () => {\n  const values = {\n    fullName: \"\",\n    mobile: \"\",\n    email: \"\",\n    address: \"\",\n  };\n  const [initialState, setState] = useState(values);\n  const [error, setError] = useState(\"\")\n  //const [data, setData] = useState({});\n\n  //   console.log(\"currentId\", currentId);\n\n  const {contacts : data} = useSelector((state)=> state.data)\n\n  const dispatch = useDispatch()\n\n  const { fullName, mobile, email, address } = initialState;\n\n  const currentId = useParams();\n  const history = useHistory();\n\n  const { id } = currentId;\n\n  console.log(\"currentId\", currentId);\n\n  // useEffect(() => {\n  //   firebaseDb.child(\"contacts\").on(\"value\", (snapshot) => {\n  //     if (snapshot.val() !== null) {\n  //       setData({\n  //         ...snapshot.val(),\n  //       });\n  //     } else {\n  //       setData({});\n  //     }\n  //   });\n  // }, [id]);\n\n  useEffect(() => {\n    if (isEmpty(id)) {\n      console.log(\"initialState\", initialState);\n      setState({ ...values });\n    } else {\n      setState({ ...data[id] });\n    }\n  }, [id, data]);\n\n  const handleInputChange = (e) => {\n    let { name, value } = e.target;\n    setState({\n      ...initialState,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e, obj) => {\n    e.preventDefault();\n    console.log(\"initialState\", initialState);\n    if (isEmpty(fullName) || isEmpty(email) || isEmpty(mobile) || isEmpty(address)) {\n      setError(\"모든 문항을 채워주시길 바랍니다\")\n\n    } else if(isEmpty(id)) {\n      dispatch(addContactsStart(initialState))\n      setError(\"\")\n      history.push(\"/\");\n    }\n    else{\n      dispatch(editContactsStart( { initialState , id }))\n      setError(\"\")\n      history.push(\"/\");\n    }\n    \n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n        {error && <div style={{ color: \"red\" }}>{error}</div>}\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label className=\"bmd-label-floating\">제목</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"fullName\"\n                value={fullName} \n                onChange={handleInputChange}\n              />\n            </div>   \n            <div className=\"form-group\">\n              <div className=\"form-group\">\n              <label className=\"bmd-label-floating\">작성자</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                value={address}\n                onChange={handleInputChange}\n              />\n              <label className=\"bmd-label-floating\">이메일</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                value={email}\n                onChange={handleInputChange}\n              />\n            </div> \n             \n            <div class=\"input-group\">\n              <span class=\"input-group-text\">내용</span>\n              <textarea\n                //type=\"text\"\n                className=\"form-control\"\n                aria-label = \"With textarea\"\n                name=\"mobile\"\n                value={mobile}\n                onChange={handleInputChange}\n              />\n            </div>\n         \n       \n            </div>\n            <button className=\"btn btn-default\">취소</button>\n            <button type=\"submit\" className=\"btn btn-success btn-raised\">\n              제출\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddEdit;\n","import React from \"react\";\n\nconst Error = () => {\n  return (\n    <div className=\"container-fluid mt-5\">\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">Welcome to Dstory</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <div className=\"container-fluid\">\n      <nav\n        className=\"navbar navbar-expand-lg\"\n        style={{ backgroundColor: \"rgb(120, 120, 120)\" }}\n      >\n        <NavLink to=\"/\" className=\"btn\" style={{ color: \"white\" }}>\n          메인\n        </NavLink>\n\n        <NavLink to=\"/add\" className=\"btn\" style={{ color: \"white\" }}>\n          작성하기\n        </NavLink>\n        {/* <NavLink to=\"/about\" className=\"btn\" style={{ color: \"white\" }}>\n          About\n        </NavLink> */}\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport {useSelector} from \"react-redux\"\nimport firebaseDb from \"../firebase\";\n\nconst View = () => {\n  const currentId = useParams(); \n  const { id } = currentId;\n  const {contacts : data } = useSelector((state) => state.data)\n\n  console.log(\"currentId\", currentId);\n\n\n  return (\n    <div className=\"container mt-5\">\n      {Object.keys(data).map((userId) => {\n        if (userId === id) {\n          return (\n            <div class=\"card\">\n              <div class=\"card-header lead\">제목  : {data[id].fullName}</div>\n              <div class=\"card-body\">\n                {/* <p class=\"card-text\">성함: {data[id].fullName}</p> */}  \n               <p class=\"card-text\">이메일: {data[id].email}</p>\n                <p class=\"card-text\">작성자: {data[id].address}</p>\n                <p class=\"card-text\">내용: {data[id].mobile}</p>\n            \n                <Link to=\"/\">\n                  <a className=\"btn btn-info\">돌아가기</a>\n                </Link>\n              </div>\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default View;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"jumbotron\">\n        <p className=\"lead\">\n          made by 김도연\n          E-mail : jkaza98aza@gmail.com\n          Phone number ; 010-****-****\n          학력 : 안양대학교 관광학과, 융학소프트웨어학과전공\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ListRecord from \"./components\";\nimport AddEdit from \"./components/AddEdit\";\nimport Error from \"./components/Error\";\nimport Header from \"./components/Header\";\nimport View from \"./components/View\";\nimport About from \"./components/About\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n        <Switch>\n          <Route exact path=\"/\" component={ListRecord} />\n          <Route exact path=\"/add\" component={AddEdit} />\n          <Route exact path=\"/view/:id\" component={View} />\n          <Route exact path=\"/update/:id\" component={AddEdit} />\n          <Route exact path=\"/about\" component={About} />\n          <Route path=\"*\" component={Error} />\n        </Switch>\n      \n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default App;\n\n// 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\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"," \nimport * as types from \"./actionTypes\"\n\nconst initialState = {\n    contacts : {},\n    error : null,\n    loading : false,\n}\n\nconst contactReducer = (state = initialState, action) =>{\n    switch(action.type){\n        \n        case types.GET_CONTACTS_START:\n        case types.DELETE_CONTACTS_START:\n        case types.ADD_CONTACTS_START:\n        case types.EDIT_CONTACTS_START:\n            return{\n                ...state,\n                loading : true,\n            }\n        case types.GET_CONTACTS_SUCCESS:\n            return{\n                    ...state,\n                    contacts : action.payload,\n                    loading : false,\n                }\n        case types.DELETE_CONTACTS_SUCCESS:\n        case types.ADD_CONTACTS_SUCCESS:\n        case types.EDIT_CONTACTS_SUCCESS:\n            return{\n                ...state,\n                loading : false\n            } \n\n        case types.GET_CONTACTS_FAIL:\n        case types.DELETE_CONTACTS_FAIL:\n        case types.ADD_CONTACTS_FAIL:\n        case types.EDIT_CONTACTS_FAIL:\n            return{\n                ...state,\n                error : action.payload,\n                loading : false,\n                }\n        \n            default:\n                return state\n    }\n\n}\n\nexport default contactReducer","import { combineReducers } from \"redux\";\nimport contactReducer from \"./reducer\";\n\nconst rootReducer = combineReducers({\n    data : contactReducer,\n    \n \n});\n\nexport default rootReducer;\n","import {takeLatest, all, put, fork} from \"redux-saga/effects\"\nimport * as types from \"./actionTypes\"\nimport firebaseDb from \"../firebase\"\nimport { addContactsFail, addContactsSuccess, deleteContactsFail, deleteContactsSuccess, editContactsFail, editContactsSuccess, getContactsFail, getContactsSuccess } from \"./actions\"\n\nexport function* onLoadContactAsync() {\n    try{\n        const contacts =yield new Promise((resolve) =>\n        firebaseDb.child(\"contacts\").on(\"value\" , resolve)\n        )\n        if (contacts.val() !== null){\n            yield put(getContactsSuccess(contacts.val()))\n        } else {\n            yield put(getContactsSuccess({}))\n        }\n    } catch(error){\n        yield put(getContactsFail())\n\n    }\n}\n\nexport function* onDeleteContactAsync({payload : id}) {\n    try{\n        yield firebaseDb.child(`contacts/${id}`).remove()\n        yield put(deleteContactsSuccess())   \n    } catch(error){\n        yield put(deleteContactsFail())\n\n    }\n}\n\nexport function* onAddContactAsync({payload : contact}) {\n    try{\n        yield firebaseDb.child(\"contacts\").push(contact)\n        yield put(addContactsSuccess())   \n    } catch(error){\n        yield put(addContactsFail())\n\n    }\n}\n\nexport function* onEditContactAsync({payload : { id, initialState: contact}}) {\n    try{\n        yield firebaseDb.child(`contacts/${id}`).set(contact)\n        yield put(editContactsSuccess())   \n    } catch(error){\n        yield put(editContactsFail())\n\n    }\n}\n\n\nexport function* onLoadContact() {\n    yield takeLatest(types.GET_CONTACTS_START, onLoadContactAsync)\n}\n\nexport function* onDeleteContact() {\n    yield takeLatest(types.DELETE_CONTACTS_START, onDeleteContactAsync)\n}\n\nexport function* onAddContact() {\n    yield takeLatest(types.ADD_CONTACTS_START, onAddContactAsync)\n}\nexport function* onEditContact() {\n    yield takeLatest(types.EDIT_CONTACTS_START, onEditContactAsync)\n}\n\n\n\nconst contactSagas = [fork(onLoadContact), fork(onDeleteContact), fork(onAddContact), fork(onEditContact)]\n\nexport default function* rootSaga() {\n    yield all([...contactSagas])\n}","import { createStore, applyMiddleware } from \"redux\";\n//import thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\"\n\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(logger);\n}\n\nconst store = createStore(rootReducer,applyMiddleware(...middleware));\n\nsagaMiddleware.run(rootSaga)\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\"\nimport {Provider} from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n       <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}